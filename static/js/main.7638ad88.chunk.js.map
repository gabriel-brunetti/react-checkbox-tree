{"version":3,"sources":["components/Item/index.js","components/List/index.js","context.js","App.js","index.js"],"names":["Item","item","children","isChecked","useState","collapsed","setCollapsed","checked","setChecked","useEffect","JSON","parse","localStorage","getItem","forEach","element","id","expandeds","items","filter","setItem","stringify","className","onClick","checkedStatus","childrenId","map","checkedItems","idItem","console","log","type","name","onChange","length","icon","faChevronDown","data","List","Object","values","AppContext","React","createContext","AppProvider","people","setPeople","fetchData","useCallback","person","entries","dataJSON","Provider","value","App","useContext","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7638ad88.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport List from '../List'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons'\r\nimport './style.css'\r\n\r\nconst Item = ({ item, children, isChecked }) => {\r\n  const [collapsed, setCollapsed] = useState(false)\r\n  const [checked, setChecked] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const collapsedIDs = JSON.parse(localStorage.getItem('expanded')) || []\r\n\r\n    collapsedIDs.forEach((element) => {\r\n      if (element === item.id) {\r\n        setCollapsed(false)\r\n      }\r\n    })\r\n  }, [item])\r\n\r\n  useEffect(() => {\r\n    let expandeds = JSON.parse(localStorage.getItem('expanded')) || []\r\n    if (!collapsed) {\r\n      localStorage.setItem('expanded', JSON.stringify([...expandeds, item.id]))\r\n    } else {\r\n      const items = expandeds.filter((id) => id !== item.id)\r\n      localStorage.setItem('expanded', JSON.stringify(items))\r\n    }\r\n  }, [collapsed, item])\r\n\r\n  useEffect(() => {\r\n    setChecked(isChecked)\r\n  }, [isChecked])\r\n\r\n  useEffect(() => {\r\n    const checkedIds = JSON.parse(localStorage.getItem('check')) || []\r\n    checkedIds.forEach((item) => {\r\n      if (item === item.id) {\r\n        setChecked(true)\r\n      }\r\n    })\r\n  }, [item])\r\n\r\n  const toggleCollapse = () => setCollapsed(!collapsed)\r\n\r\n  const toggleChecked = () => {\r\n    let checkedStatus = !checked\r\n    const childrenId = children.map((children) => children.id)\r\n    const checkedItems = JSON.parse(localStorage.getItem('check')) || []\r\n    if (checkedStatus) {\r\n      localStorage.setItem(\r\n        'check',\r\n        JSON.stringify([...checkedItems, item.id, ...childrenId])\r\n      )\r\n    } else {\r\n      let items = checkedItems.filter((idItem) => idItem !== item.id)\r\n      console.log(checkedItems)\r\n      localStorage.setItem('check', JSON.stringify(items))\r\n    }\r\n    setChecked(checkedStatus)\r\n  }\r\n\r\n  return (\r\n    <li className='item-container'>\r\n      <div className='checkbox-container'>\r\n        <div className='checkbox-input' onClick={toggleChecked}>\r\n          <input\r\n            type='checkbox'\r\n            name='checkbox'\r\n            id='checkbox'\r\n            checked={checked}\r\n            onChange={() => setChecked(!checked)}\r\n          />\r\n          <span>{item.name}</span>\r\n        </div>\r\n        {children.length > 0 ? (\r\n          <FontAwesomeIcon\r\n            icon={faChevronDown}\r\n            onClick={toggleCollapse}\r\n            className={`icon ${collapsed ? 'clicked' : ''}`}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n\r\n      <ul className={(collapsed ? 'collapsed' : '', 'nestedList-container')}>\r\n        {collapsed && children?.length > 0 && (\r\n          <List data={children} checked={checked} />\r\n        )}\r\n      </ul>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Item\r\n","import React, { useEffect, useState } from 'react'\r\nimport Item from '../Item/index'\r\nimport './style.css'\r\n\r\nconst List = ({ data, checked }) => {\r\n  const nestedItem = (item) => {\r\n    const children = Object.values(item.children)\r\n    return (\r\n      <Item key={item.id} item={item} children={children} isChecked={checked} />\r\n    )\r\n  }\r\n\r\n  return <>{data.map(nestedItem)}</>\r\n}\r\n\r\nexport default List\r\n","import React, { useContext, useEffect, useState, useCallback } from 'react'\r\nimport dataJSON from './db/data.json'\r\n\r\nconst AppContext = React.createContext()\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [people, setPeople] = useState([])\r\n\r\n  const fetchData = useCallback(() => {\r\n    const person = Object.entries(dataJSON).map((item) => {\r\n      return item[1]\r\n    })\r\n    setPeople(person)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [fetchData])\r\n\r\n  return (\r\n    <AppContext.Provider value={{ people }}>{children}</AppContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext)\r\n}\r\n\r\nexport { AppContext, AppProvider }\r\n","import React from 'react'\nimport List from './components/List/'\nimport './App.css'\nimport { useGlobalContext } from './context'\n\nfunction App() {\n  const { people } = useGlobalContext()\n  return (\n    <ul className={'list-container'}>\n      <List data={people} />\n    </ul>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { AppProvider } from './context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}